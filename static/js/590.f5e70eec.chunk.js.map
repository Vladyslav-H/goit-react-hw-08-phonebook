{"version":3,"file":"static/js/590.f5e70eec.chunk.js","mappings":"8OAEaA,EAAYC,EAAAA,GAAAA,IAAH,+GAOTC,EAAmBD,EAAAA,GAAAA,IAAH,mP,4DCPhBE,EAAaF,EAAAA,GAAAA,KAAH,yRAcVG,EAASH,EAAAA,GAAAA,OAAH,ogBAyBNI,EAAQJ,EAAAA,GAAAA,MAAH,oFAMLK,EAAQL,EAAAA,GAAAA,MAAH,kKC/CLM,EAAkB,CAC7BC,QAAS,QACTC,MAAO,OACPC,OAAQ,QAGGC,EAAiB,CAC5BH,QAAS,QACTC,MAAO,OACPC,OAAQ,QAGGE,EAAiB,CAC5BC,SAAU,WACVC,IAAK,QACLC,KAAM,OACNN,MAAO,OACPC,OAAQ,OACRM,KAAM,mB,SCNKC,EAAO,WAClB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASA,QAAnB,IAE5BG,GAAWC,EAAAA,EAAAA,MAEXC,EAAoB,SAAAC,GACxB,MAAwBA,EAAEC,OAAlBX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,MAEd,OAAQZ,GACN,IAAK,OACHC,EAAQW,GACR,MACF,IAAK,SACHT,EAAUS,GACV,MACF,QACE,OAEL,EAmBKC,EAAY,WAChBZ,EAAQ,IACRE,EAAU,GACX,EAED,OACE,UAACnB,EAAD,CAAY8B,SAvBO,SAAAJ,GAMnB,GALAA,EAAEK,iBAEiBX,EAASY,MAC1B,SAAAC,GAAO,OAAIA,EAAQjB,KAAKkB,gBAAkBlB,EAAKkB,aAAxC,IAGP,OAAOC,MAAM,GAAD,OAAInB,EAAJ,2BAGdO,GAASa,EAAAA,EAAAA,IAAa,CAAEpB,KAAAA,EAAME,OAAAA,KAI9BW,GACD,EAQC,WACE,SAAC,MAAD,CAAoBQ,MAAO5B,KAC3B,UAACP,EAAD,YACE,oCACA,SAACC,EAAD,CACEmC,KAAK,OACLtB,KAAK,OACLuB,YAAY,gBACZC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRd,MAAOZ,EACP2B,SAAUlB,QAGd,UAACvB,EAAD,YACE,qCACA,SAACC,EAAD,CACEmC,KAAK,MACLtB,KAAK,SACLuB,YAAY,gBACZC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRd,MAAOV,EACPyB,SAAUlB,QAGd,UAACxB,EAAD,CAAQqC,KAAK,SAAb,0BACc,SAAC,MAAD,CAAiBD,MAAO7B,SAI3C,E,UCzFYN,EAAQJ,EAAAA,GAAAA,MAAH,uLAWLK,EAAQL,EAAAA,GAAAA,MAAH,4ICalB,EArBe,WACb,IAAMyB,GAAWC,EAAAA,EAAAA,MACXoB,GAASvB,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMsB,MAAV,IAEhC,OACE,UAAC,EAAD,YACE,sDACA,SAAC,EAAD,CACEN,KAAK,OACLC,YAAY,SACZvB,KAAK,SACLwB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRd,MAAOgB,EACPD,SAAU,SAAAjB,GAAC,OAAIH,GAASsB,EAAAA,EAAAA,GAAInB,EAAEC,OAAOC,OAA1B,MAIlB,E,UCPD,EAfe,WACb,OACE,SAAC,KAAD,CACErB,OAAO,KACPD,MAAM,KACNwC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,GAGd,E,SCbYC,EAAatD,EAAAA,GAAAA,IAAH,yaAoBVuD,EAAcvD,EAAAA,GAAAA,IAAH,wDAKXwD,EAAMxD,EAAAA,GAAAA,IAAH,mVAkBHyD,GAAOzD,EAAAA,EAAAA,IAAOwD,EAAPxD,CAAH,+DAKJ0D,GAAO1D,EAAAA,EAAAA,IAAOwD,EAAPxD,CAAH,+DCLjB,EApCc,SAAC,GAA2B,IAAzB2D,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,QAAS1C,EAAW,EAAXA,KACtBO,GAAWC,EAAAA,EAAAA,MAUjB,OACE,UAAC4B,EAAD,YACE,iDACqB,gCAAQpC,EAAR,OADrB,OADF,iBAKE,UAACqC,EAAD,YACE,UAACG,EAAD,CAAMlB,KAAK,SAASqB,QAASD,EAA7B,WACE,kCADF,KACmB,SAAC,MAAD,CAAarB,MAAOjC,QAEvC,UAACmD,EAAD,CAAMjB,KAAK,SAASqB,QAAS,kBAlBZ,SAAAF,GACrBlC,GAASqC,EAAAA,EAAAA,IAAeH,IAIxBC,GACD,CAYwCG,CAAeJ,EAArB,EAA7B,WACE,SAAC,MAAD,CAAapB,MAAOjC,KACpB,0CAKT,ECnCY0D,EAAYhE,EAAAA,GAAAA,IAAH,maAqBTiE,EAAoBjE,EAAAA,GAAAA,GAAH,itBAoCjBkE,GAAWlE,EAAAA,GAAAA,IAAH,yDAKRmE,IAAcnE,EAAAA,EAAAA,IAAOkE,GAAPlE,CAAH,mDCfxB,GAnCoB,SAAC,GAA0B,IAAxBkB,EAAuB,EAAvBA,KAAME,EAAiB,EAAjBA,OAAQuC,EAAS,EAATA,GACnC,GAA4B1C,EAAAA,EAAAA,WAAS,GAArC,eAAOmD,EAAP,KAAeC,EAAf,KASA,OACE,UAACJ,EAAD,YACE,UAACE,GAAD,YACE,UAACD,GAAD,YACE,SAAC,MAAD,CAAU3B,MAAO7B,IADnB,IACuCQ,MAEvC,UAACgD,GAAD,YACE,SAAC,MAAD,CAAc3B,MAAO7B,IADvB,IAC2CU,SAG7C,UAAC4C,EAAD,CAAWxB,KAAK,SAASqB,QAjBhB,WACXQ,GAAU,EACX,EAeG,oBAEE,SAAC,MAAD,CAAoB9B,MAAO7B,OAE5B0D,IAAU,SAAC,EAAD,CAAOR,QAlBR,WACZS,GAAU,EACX,EAgBqCnD,KAAMA,EAAMyC,GAAIA,MAGvD,ECvCYW,GAAiB,SAAA9C,GAAK,OAAIA,EAAMF,SAASA,QAAnB,EACtBiD,GAAkB,SAAA/C,GAAK,OAAIA,EAAMF,SAASkD,SAAnB,EACvBC,GAAc,SAAAjD,GAAK,OAAIA,EAAMF,SAASoD,KAAnB,EAEnBC,GAAiB,SAAAnD,GAC5B,IAAMsB,ECPoB,SAAAtB,GAAK,OAAIA,EAAMsB,MAAV,CDOhB8B,CAAapD,GACtBF,EAAWgD,GAAe9C,GAE1BqD,EAAmB/B,EAAOV,cAEhC,GAAwB,IAApBd,EAASwD,OACb,OAAOxD,EAASwB,QAAO,SAAAX,GAAO,OAC5BA,EAAQjB,KAAKkB,cAAc2C,SAASF,EADR,GAG/B,EEkCD,GApCoB,WAClB,IAAMvD,GAAWC,EAAAA,EAAAA,IAAY+C,IACvBE,GAAYjD,EAAAA,EAAAA,IAAYgD,IACxBG,GAAQnD,EAAAA,EAAAA,IAAYkD,IAEpBhD,GAAWC,EAAAA,EAAAA,OAEjBsD,EAAAA,EAAAA,YAAU,WACRvD,GAASwD,EAAAA,EAAAA,MACV,GAAE,CAACxD,IAEJ,IAAMyD,GAAkB3D,EAAAA,EAAAA,IAAYoD,IACpC,OACE,wBACGH,GACC,SAAC,EAAD,IACEE,GACF,wBAAKA,IACFpD,EAASwD,OAETI,EAAgBJ,OAGnBI,EAAgBC,KAAI,gBAAGxB,EAAH,EAAGA,GAAIzC,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OAClB,SAAC,GAAD,CAEEF,KAAMA,EACNE,OAAQA,EACRuC,GAAIA,GAHCA,EAFW,KAFpB,8CAFA,6DAeP,EC9BD,GAbqB,WACnB,OACE,UAAC5D,EAAD,YACE,SAACiB,EAAD,KACA,UAACf,EAAD,YACE,sCACA,SAAC,EAAD,KACA,SAAC,GAAD,SAIP,C","sources":["pages/ContactsPage/ContactsPageStyled.js","components/Form/Form.styled.js","components/IconStyled/IconStyled.js","components/Form/Form.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Loader/Loader.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","redux/contacts/contactsSelector.js","redux/filter/filterelector.js","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding: 20px;\n`;\n\nexport const ContactContainer = styled.div`\n  min-width: 400px;\n  max-height: 350px;\n  padding: 20px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  background-color:  rgb(224, 162, 25, 0.7);\n  border-radius: 15px;\n  overflow: auto;\n`;\n\n\n","import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  position: relative;\n  width: 400px;\n  padding: 20px;\n  margin-top: 20px;\n  margin-bottom: 50px;\n  background-color: rgb(224, 162, 25, 0.7);\n  border-radius: 15px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: 15px;\n`;\n\nexport const Button = styled.button`\n  min-width: 150px;\n  height: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  cursor: pointer;\n  border: none;\n  border-radius: 5px;\n  color: #ffc459;\n  background-color: #008630;\n  font-size: 18px;\n  box-shadow: 4px 0px 10px -2px rgba(0, 0, 0, 0.75);\n  transition: all 250ms linear;\n\n  &:hover {\n    color: #008630;\n    background-color: #ffc459;\n    transform: scale(1.05);\n  }\n`;\n\nexport const Label = styled.label`\n  color: #50322c;\n  font-size: 22px;\n  font-weight: 600;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  height: 25px;\n  margin-left: 30px;\n  background-color: #f1da8d;\n\n  &:focus {\n    background-color: #e4ecfc;\n  }\n`;\n","export const ModalIconStyled = {\n  display: 'block',\n  width: '30px',\n  height: '30px',\n};\n\nexport const ItemIconStyled = {\n  display: 'block',\n  width: '20px',\n  height: '20px',\n};\n\nexport const FormIconStyled = {\n  position: 'absolute',\n  top: ' 18px',\n  left: '24px',\n  width: '78px',\n  height: 'auto',\n  fill: 'rgb(102, 51, 0)',\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { postContacts } from 'redux/contacts/contactsOperations';\nimport { MdPersonAddAlt1 } from 'react-icons/md';\nimport { RiContactsBookFill } from 'react-icons/ri';\n\nimport { FormStyled, Button, Label, Input } from './Form.styled';\nimport {\n  ItemIconStyled,\n  FormIconStyled,\n} from 'components/IconStyled/IconStyled';\n\nexport const Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(state => state.contacts.contacts);\n\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (newContact) {\n      return alert(`${name} is alredy in contacts`);\n    }\n\n    dispatch(postContacts({ name, number }));\n    // .then(() => dispatch(getContacts()))\n    // .then(() => resetForm())\n    // .catch(e => console.error(e.message));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormStyled onSubmit={handleSubmit}>\n      <RiContactsBookFill style={FormIconStyled} />\n      <Label>\n        <span>Name</span>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Ivan Ivanenko\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleInputChange}\n        />\n      </Label>\n      <Label>\n        <span>Phone</span>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"050 123 45 67\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleInputChange}\n        />\n      </Label>\n      <Button type=\"submit\">\n        Add contact <MdPersonAddAlt1 style={ItemIconStyled} />\n      </Button>\n    </FormStyled>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  width: 300px;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  height: 25px;\n  background-color: #f1da8d;\n\n  &:focus {\n    background-color: #e4ecfc;\n  }\n`;\n","import { add } from 'redux/filter/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Label, Input } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n\n  return (\n    <Label>\n      <span> Find contacts by name</span>\n      <Input\n        type=\"text\"\n        placeholder=\"search\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={filter}\n        onChange={e => dispatch(add(e.target.value))}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"#094b73\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const ModalWrapp = styled.div`\n  z-index: 1;\n  position: absolute;\n  top: 0;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  width: 100%;\n  min-height: 100px;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  border-radius: 5px;\n  color: #fcf189;\n  background-color: rgb(255, 102, 102,0.9);\n  box-shadow: 0px 0px 11px 0px rgba(0, 0, 0, 0.75);\n`;\n\nexport const ButtonWrapp = styled.div`\n  display: flex;\n  gap: 40px;\n`;\n\nexport const Btn = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  cursor: pointer;\n  border: none;\n  font-weight: 700;\n  color: white;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    scale: 1.2;\n  }\n`;\n\nexport const BtnY = styled(Btn)`\n  &:hover {\n    color: #cc0000;\n  }\n`;\nexport const BtnN = styled(Btn)`\n  &:hover {\n    color: #00ff00;\n  }\n`;\n\n\n","import { useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/contactsOperations';\nimport { CiFaceFrown, CiFaceSmile } from 'react-icons/ci';\nimport PropTypes from 'prop-types';\n\nimport { ModalWrapp, BtnN, BtnY, ButtonWrapp } from './Modal.styled';\n\nimport { ModalIconStyled } from 'components/IconStyled/IconStyled';\n\nconst Modal = ({ id, onClose, name }) => {\n  const dispatch = useDispatch();\n\n  const removeItemCont = id => {\n    dispatch(deleteContacts(id));\n    // .then(() => dispatch(getContacts()))\n    // .then(() => onClose())\n    // .catch(e => console.error(e.message));\n    onClose();\n  };\n\n  return (\n    <ModalWrapp>\n      <h4>\n        You wont to remove <span>'{name}'</span>!\n      </h4>\n      Are you sure?\n      <ButtonWrapp>\n        <BtnN type=\"button\" onClick={onClose}>\n          <span> No</span> <CiFaceSmile style={ModalIconStyled} />\n        </BtnN>\n        <BtnY type=\"button\" onClick={() => removeItemCont(id)}>\n          <CiFaceFrown style={ModalIconStyled} />\n          <span>Yes</span>\n        </BtnY>\n      </ButtonWrapp>\n    </ModalWrapp>\n  );\n};\n\nModal.propTypes = {\n  name: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default Modal;\n","import styled from 'styled-components';\n\nexport const ButtonDel = styled.div`\n  width: 100px;\n  margin-left: 20px;\n  padding: 4px;\n  display: flex;\n  justify-content: space-around;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  color: #ffc459;\n  background-color: red;\n  box-shadow: 4px 0px 16px -2px rgba(0, 0, 0, 0.5);\n  transition: all 250ms linear;\n\n  &:hover {\n    background-color: black;\n    color: red;\n    transform: scale(1.05);\n  }\n`;\n\nexport const ContactItemStyled = styled.li`\n  position: relative;\n  min-width: 300px;\n  height: auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 18px;\n  font-weight: 600;\n  padding: 5px 10px;\n  border: 1px solid black;\n  border-radius: 4px;\n  box-shadow: 0px 0px 11px -5px rgba(0, 0, 0, 0.75);\n\n  &:nth-child(4n + 1) {\n    background-color: #c4dfe6;\n    color: #003b46;\n  }\n  &:nth-child(4n + 2) {\n    background-color: #66a5ad;\n    color: #07575b;\n  }\n  &:nth-child(4n + 3) {\n    background-color: #07575b;\n    color: #66a5ad;\n  }\n  &:nth-child(4n + 4) {\n    background-color: #003b46;\n    color: #c4dfe6;\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const ItemWrap = styled.div`\n  display: flex;\n\n  gap: 5px;\n`;\nexport const ContactWrap = styled(ItemWrap)`\n  flex-direction: column;\n`;\n","import PropTypes from 'prop-types';\n\nimport Modal from 'components/Modal/Modal';\nimport { useState } from 'react';\nimport {\n  ContactItemStyled,\n  ButtonDel,\n  ItemWrap,\n  ContactWrap,\n} from 'components/ContactItem/ContactItem.styled';\nimport { ItemIconStyled } from 'components/IconStyled/IconStyled';\n\nimport { MdPersonRemoveAlt1, MdPerson, MdLocalPhone } from 'react-icons/md';\n\nconst ContactItem = ({ name, number, id }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const open = () => {\n    setIsOpen(true);\n  };\n  const close = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <ContactItemStyled>\n      <ContactWrap>\n        <ItemWrap>\n          <MdPerson style={ItemIconStyled} /> {name}\n        </ItemWrap>\n        <ItemWrap>\n          <MdLocalPhone style={ItemIconStyled} /> {number}\n        </ItemWrap>\n      </ContactWrap>\n      <ButtonDel type=\"button\" onClick={open}>\n        Remove\n        <MdPersonRemoveAlt1 style={ItemIconStyled} />\n      </ButtonDel>\n      {isOpen && <Modal onClose={close} name={name} id={id} />}\n    </ContactItemStyled>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import { selectFilter } from 'redux/filter/filterelector';\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const filtedContacts = state => {\n  const filter = selectFilter(state);\n  const contacts = selectContacts(state);\n\n  const normalizedFilter = filter.toLowerCase();\n\n  if (contacts.length === 0) return;\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","export const selectFilter = state => state.filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport Loader from 'components/Loader/Loader';\n\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport { getContacts } from 'redux/contacts/contactsOperations';\n import {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n  filtedContacts,\n} from 'redux/contacts/contactsSelector';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n \n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  const newContactsList = useSelector(filtedContacts) \n  return (\n    <ul>\n      {isLoading ? (\n        <Loader />\n      ) : error ? (\n        <h3>{error}</h3>\n      ) : !contacts.length ? (\n        <h3>You don't have any contacts yet</h3>\n      ) : !newContactsList.length ? (\n        <h3>No matches found</h3>\n      ) : (\n        newContactsList.map(({ id, name, number }) => (\n          <ContactItem\n            key={id}\n            name={name}\n            number={number}\n            id={id}\n          ></ContactItem>\n        ))\n      )}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { Container, ContactContainer } from './ContactsPageStyled';\nimport { Form } from 'components/Form/Form';\nimport Filter from '../../components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nconst ContactsPage = () => {\n  return (\n    <Container>\n      <Form />\n      <ContactContainer>\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </ContactContainer>\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Container","styled","ContactContainer","FormStyled","Button","Label","Input","ModalIconStyled","display","width","height","ItemIconStyled","FormIconStyled","position","top","left","fill","Form","useState","name","setName","number","setNumber","contacts","useSelector","state","dispatch","useDispatch","handleInputChange","e","target","value","resetForm","onSubmit","preventDefault","find","contact","toLowerCase","alert","postContacts","style","type","placeholder","pattern","title","required","onChange","filter","add","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","ModalWrapp","ButtonWrapp","Btn","BtnY","BtnN","id","onClose","onClick","deleteContacts","removeItemCont","ButtonDel","ContactItemStyled","ItemWrap","ContactWrap","isOpen","setIsOpen","selectContacts","selectIsLoading","isLoading","selectError","error","filtedContacts","selectFilter","normalizedFilter","length","includes","useEffect","getContacts","newContactsList","map"],"sourceRoot":""}